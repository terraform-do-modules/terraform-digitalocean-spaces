---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name : Terraform Digitalocean spaces

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: terraform-do-modules/terraform-digitalocean-spaces

# Badges to display
badges:
  - name: "Terraform"
    image: "https://img.shields.io/badge/Terraform-v0.15-green"
    url: "https://www.terraform.io"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"

#  description of this project
description: |-
  spaces are virtual networks containing resources that can communicate with each other in full isolation, using private IP addresses.

# extra content
include:
  - "terraform.md"

# How to use this project
usage : |-
  ### Simple Example
  Here is an example of how you can use this module in your inventory structure:
  ### basic example
  ```hcl
        module "spaces" {
        source        = "terraform-do-modules/spaces/digitalocean"
        version       = "0.15.0"
        name          = "spaces"
        environment   = "test"
        acl           = "private"
        force_destroy = false
        region        = "nyc3"
      }
  ```
  ### complete example
  ```hcl
        module "spaces" {
        source        = "terraform-do-modules/spaces/digitalocean"
        version       = "0.15.0"
        name          = "spaces"
        environment   = "test"
        acl           = "private"
        force_destroy = false
        region        = "nyc3"

        cors_rule = [
          {
            allowed_headers = ["*"]
            allowed_methods = ["PUT", "POST"],
            allowed_origins = ["https://www.example.com"],
            expose_headers  = ["ETag"],
            max_age_seconds = 3000
          }
        ]

        lifecycle_rule = [
          {
            enabled                                = true
            abort_incomplete_multipart_upload_days = 20
            expiration = [
              {
                date                         = "2029-02-28"
                days                         = 85
                expired_object_delete_marker = true
              }
            ]
            noncurrent_version_expiration_days = 15

          }
        ]

        policy = jsonencode({
          "Version" : "2012-10-17",
          "Statement" : [
            {
              "Sid" : "IPAllow",
              "Effect" : "Deny",
              "Principal" : "*",
              "Action" : "s3:*",
              "Resource" : [
                "arn:aws:s3:::space-name",
                "arn:aws:s3:::space-name/*"
              ],
              "Condition" : {
                "NotIpAddress" : {
                  "aws:SourceIp" : "0.0.0.0/0"
                }
              }
            }
          ]
        })
      }
  ```
